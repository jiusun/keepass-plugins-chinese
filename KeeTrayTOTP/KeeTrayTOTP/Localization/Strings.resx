<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="ColumnTOTPCode" xml:space="preserve">
    <value>TOTP</value>
  </data>
  <data name="ColumnTOTPStatus" xml:space="preserve">
    <value>TOTP 状态</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>连接失败！</value>
  </data>
  <data name="CopyTOTP" xml:space="preserve">
    <value>复制 TOTP</value>
  </data>
  <data name="DatabaseIsLocked" xml:space="preserve">
    <value>数据库已锁定！</value>
  </data>
  <data name="DatabaseIsNotOpen" xml:space="preserve">
    <value>数据库未打开！</value>
  </data>
  <data name="ErrorBadSeed" xml:space="preserve">
    <value>错误，坏种子！</value>
  </data>
  <data name="ErrorBadSettings" xml:space="preserve">
    <value>错误，没有配置！</value>
  </data>
  <data name="ErrorNoSeed" xml:space="preserve">
    <value>错误，没有种子！</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>已锁定</value>
  </data>
  <data name="NoDatabaseIsOpened" xml:space="preserve">
    <value>没有打开的数据库！</value>
  </data>
  <data name="NoTOTPEntriesFound" xml:space="preserve">
    <value>没有找到包含 TOTP 的条目</value>
  </data>
  <data name="NoTOTPSeedFound" xml:space="preserve">
    <value>没有找到 TOTP 种子！</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="SettingsAskResetDefaultValues" xml:space="preserve">
    <value>确认将所有设置恢复为默认值？</value>
  </data>
  <data name="SettingsCurrentDatabaseLocked" xml:space="preserve">
    <value>当前数据库已锁定，该功能仅适用于未锁定的数据库</value>
  </data>
  <data name="SettingsDefaultValuesRestored" xml:space="preserve">
    <value>设置已经全部恢复为默认值！</value>
  </data>
  <data name="SettingsEnableFieldRename" xml:space="preserve">
    <value>请先启用自定义变量名。</value>
  </data>
  <data name="SettingsErrors" xml:space="preserve">
    <value>检测到错误！</value>
  </data>
  <data name="SettingsInvalidCharacter" xml:space="preserve">
    <value>无效字符！</value>
  </data>
  <data name="SettingsInvalidNameSeed" xml:space="preserve">
    <value>无效的名字！必须与种子自定义字段名不同。</value>
  </data>
  <data name="SettingsInvalidNameSetting" xml:space="preserve">
    <value>无效的名字！必须与配置自定义字段名不同。</value>
  </data>
  <data name="SettingsNoInternetDetected" xml:space="preserve">
    <value>警告, no internet connection detected!{0}{0}You will not be able to add any server until you are connected.</value>
    <comment>{0} must be Environment.NewLine</comment>
  </data>
  <data name="SettingsOpenDatabaseRequired" xml:space="preserve">
    <value>要使用该功能必须先打开数据库。</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="SetupDelete" xml:space="preserve">
    <value>删除当前 TOTP 配置。</value>
  </data>
  <data name="SetupFinish" xml:space="preserve">
    <value>关闭向导。</value>
  </data>
  <data name="SetupInterval" xml:space="preserve">
    <value>Interval must be between{0}nand 180 inclusively!</value>
    <comment>{0} must be Environment.NewLine</comment>
  </data>
  <data name="SetupInvalidCharacter" xml:space="preserve">
    <value>无效字符！</value>
  </data>
  <data name="SetupInvalidPadding" xml:space="preserve">
    <value>Padding (=) 只能出现在末尾！</value>
  </data>
  <data name="SetupInvalidUrl" xml:space="preserve">
    <value>无效的 URL！</value>
  </data>
  <data name="SetupLengthMandatory" xml:space="preserve">
    <value>长度为必填项！</value>
  </data>
  <data name="SetupMessageAskDeleteCurrentEntry" xml:space="preserve">
    <value>确认要删除当前条目的 TOTP 配置吗？</value>
  </data>
  <data name="SetupSeedCantBeEmpty" xml:space="preserve">
    <value>种子不能为空！</value>
  </data>
  <data name="SetupTOTP" xml:space="preserve">
    <value>配置 TOTP</value>
  </data>
  <data name="ShowQR" xml:space="preserve">
    <value>显示二维码</value>
  </data>
  <data name="SupportUrl" xml:space="preserve">
    <value>https://github.com/KeeTrayTOTP/KeeTrayTOTP/issues</value>
  </data>
  <data name="SwitchTo" xml:space="preserve">
    <value>Switch to {0}</value>
    <comment>{0} is a database name</comment>
  </data>
  <data name="TcConnectionFailed" xml:space="preserve">
    <value>服务器连接失败。</value>
  </data>
  <data name="TcPleaseWaitVerifying" xml:space="preserve">
    <value>请稍后，正在验证...</value>
  </data>
  <data name="TcSucces" xml:space="preserve">
    <value>成功!</value>
  </data>
  <data name="TcUrlExists" xml:space="preserve">
    <value>URL 已存在！</value>
  </data>
  <data name="TcUrlInvalid" xml:space="preserve">
    <value>无效的 URL！</value>
  </data>
  <data name="TcUrlMustContainHttp" xml:space="preserve">
    <value>URL 必须包含 "http"！</value>
  </data>
  <data name="TcVerificationCancelled" xml:space="preserve">
    <value>验证已取消！</value>
  </data>
  <data name="TimeCorrection" xml:space="preserve">
    <value>时间校正</value>
  </data>
  <data name="TOTP" xml:space="preserve">
    <value>TOTP</value>
  </data>
  <data name="TOTPEnabled" xml:space="preserve">
    <value>启用TOTP</value>
  </data>
  <data name="TOTPSeed" xml:space="preserve">
    <value>TOTP Seed</value>
  </data>
  <data name="TOTPSettings" xml:space="preserve">
    <value>TOTP Settings</value>
  </data>
  <data name="TrayTOTPPlugin" xml:space="preserve">
    <value>Tray TOTP 插件</value>
  </data>
  <data name="WarningBadURL" xml:space="preserve">
    <value>警告，URL 错误？</value>
  </data>
</root>